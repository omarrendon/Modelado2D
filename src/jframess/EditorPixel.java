/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jframess;

import java.awt.Color;
import java.awt.Image;
import javax.imageio.*;
import java.io.*;
import java.awt.image.*;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.stream.ImageInputStream;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author Luis
 */
public class EditorPixel extends javax.swing.JFrame {

    /**
     * Creates new form EditorPixel
     */
    public EditorPixel(String nombreImagen , String format) {
        initComponents();
        jTFNombre.setText(""+nombreImagen+"."+format);
        formato=format;
        setDefaultCloseOperation(HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCBTipoConversion = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTFNombre = new javax.swing.JTextField();
        jBConvertir = new javax.swing.JButton();
        jLImagen1 = new javax.swing.JLabel();
        jLImagen2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 204, 204));

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setFont(new java.awt.Font("Vladimir Script", 1, 48)); // NOI18N
        jLabel1.setText("Bienvenido al editor de imagenes :3");

        jCBTipoConversion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escala de grises","Blanco Y negro","Examen","Generalizacion","Imprimir matriz","Invertir escala","Niveles de grises","Histograma","Suma100px","marco","cruz","Recortar","contraste", "brillo","lineas","Operadores Binario","Operadores Binario Inverso","Umbral Gris","Umbral Gris Inverso","Extension","girar90","girar 180","girar 270","XMatCuadrada","Transposicion","BRILLO-100P","Recorte mitad","Ajedrez","Lineas V2"}));
        jCBTipoConversion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBTipoConversionActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel3.setText("Elija la conversion de colores que guste");

        jTFNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFNombreActionPerformed(evt);
            }
        });

        jBConvertir.setText("Convertir");
        jBConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConvertirActionPerformed(evt);
            }
        });

        jLImagen1.setText("Les presento su imagen....");
        jLImagen1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLImagen2.setText("jLabel5");
        jLImagen2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("Asignar imagenes a los labels");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel5.setText("El nombre es correcto?");

        jButton2.setText("Regresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTFNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jBConvertir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jCBTipoConversion, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)))
                        .addComponent(jLImagen2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(jLImagen1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(55, 55, 55)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(842, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLImagen2, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                        .addComponent(jLImagen1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCBTipoConversion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(jTFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(201, 201, 201)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(249, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFNombreActionPerformed

    private void jBConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConvertirActionPerformed
        
    switch(jCBTipoConversion.getSelectedIndex()) {
        case 0:
            escalaDeGrises();
        break;
        case 1:
                blancoYNegro();
        break;
          case 2:
              examen();
        break;
         case 3:
              generalizar();
        break;
         case 4:
              imprmirMatriz();
        break;
         case 5:
             invertirEscalaDeGrises();
        break;
         case 6:
             nivelesDeGrises();
        break;
        case 7:
             histograma();
        break;
         case 8:
             suma100px();
             break;
         case 9:
             marco();
        break;
         case 10:
             cruz();
        break;
         case 11:
             recorte();
        break;
         case 12:
             contraste();
        break;
         case 13:
             brillo();
        break;
          case 14:
             lineas();
        break;
         case 15:
             operadoresIndividuales();
        break;
        case 16:
             operadoresBinariosInverso();
        break;
        case 17:
             operadoresUmbralGris();
        break;
        case 18:
             operadoresUmbralGrisInverso();
        break;
        case 19:
             operadorExtension();
        break;
        case 20:
             girar90();
        break;
        case 21:
             girar180();
        break;
         case 22:
             girar270();
        break;
        case 23:
             X();
        break;
        case 24:
              transposicion();
        break;
         case 25:
              brillo100P();
        break;
        case 26:
              recortarMitad();
        break;
        case 27:
              ajedrez();
        break;
         case 28:
             System.err.println("LINEAS V2");
              lineasV2();
        break;
       
        default:
        JOptionPane.showMessageDialog(this, "Hey que onda, selecciona bien");
        break;
        }

    }//GEN-LAST:event_jBConvertirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jLImagen1.setIcon(new ImageIcon("C://Users/Luis/Documents/NetBeansProjects/Caraweb/"+jTFNombre.getText()));
        jLImagen2.setIcon(new ImageIcon("C://Users/Luis/Documents/NetBeansProjects/Caraweb/2"+jTFNombre.getText()));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCBTipoConversionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBTipoConversionActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCBTipoConversionActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Editor x = new Editor();
        x.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed
    private void escalaDeGrises(){
         try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");

                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                            System.out.println("|R:" + valR + "-G:" + valG + "-B:" + valB + "|");
//                            int media = ((int) (valR * 0.3) + (int) (valG * 0.59) + (int) (valB * 0.11)) / 3;
                                int media = ((int) (valR ) + (int) (valG) + (int) (valB)) / 3;

                            imagen.setRGB(j, i, new Color(media, media, media).getRGB());

                        }
                    }
//                    String nom=""+jTFNombre2+"."+formato.toLowerCase();
                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/2"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {
//            Logger.getLogger(EditorPixel.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("ALGO FALLO------------>");
                }
    }
    private void blancoYNegro(){
         try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/2" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen
                    
                    int lineamedia=30;//conocido como umbral
                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                    
                    ////////////////////////////////////////////////
                    int cantPixel=0;
                    int cantSumPixel=0;
                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
//                            int valG = c.getGreen();
//                            int valB = c.getBlue();
                          //  System.out.println("|R:" + valR + "-G:" + valG + "-B:" + valB + "|");
//                            int media = ((int) (valR * 0.3) + (int) (valG * 0.59) + (int) (valB * 0.11)) / 3;
                                cantPixel++;
                                cantSumPixel += ((int) (valR )) ;

//                            imagen.setRGB(j, i, new Color(media, media, media).getRGB());

                        }
                    }
                    System.out.println("Cantidad pixels: " + cantPixel);
                    System.out.println("Suma de la cantidad pixels: " + cantSumPixel);
                    ////////////////////////////////////////////////                    
                    lineamedia=(int)((int)cantSumPixel/cantPixel);
                    System.out.println("lineaMedia:"+lineamedia);
                    
                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                            System.out.println("|R:" + valR + "-G:" + valG + "-B:" + valB + "|");

                            //lineamedia=((int) (valR * 0.3) + (int) (valG * 0.59) + (int) (valB * 0.11)) / 3;
                            if(valR > lineamedia){
                                valR= 255;
                            }else{
                                valR= 0;
                            }
                            if(valG > lineamedia){
                                valG= 255;
                            }else{
                                valG= 0;
                            }
                            if(valB > lineamedia){
                                valB= 255;
                            }else{
                                valB= 0;
                            }
//                            int media = ((int) (valR * 0.3) + (int) (valG * 0.59) + (int) (valB * 0.11)) / 3;

//                            imagen.setRGB(j, i, new Color(media, media, media).getRGB());
                            imagen.setRGB(j, i, new Color(valR, valG, valB).getRGB());

                        }
                    }
//                    String nom=""+jTFNombre2+"."+formato.toLowerCase();
                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/3"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {
//            Logger.getLogger(EditorPixel.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("ALGO FALLO------------>");
                }
    }
    /////////////////////////////////7
    //////////////////////////////////7
     private void examen(){
         try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");

                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                            System.out.println("|R:" + valR + "-G:" + valG + "-B:" + valB + "|");
//                            int media = ((int) (valR * 0.3) + (int) (valG * 0.59) + (int) (valB * 0.11)) / 3;
                            if(valR > valG && valR >valB){
                                imagen.setRGB(j, i, new Color(255, 0, 0).getRGB());
                            }  
                            if(valG > valR && valG >valB){
                                imagen.setRGB(j, i, new Color(0, 255, 0).getRGB());
                            }
                            if(valB > valR && valB >valG){
                                imagen.setRGB(j, i, new Color(0, 0, 255).getRGB());
                            }
                           // int media = ((int) (valR ) + (int) (valG) + (int) (valB)) / 3;

                            

                        }
                    }
//                    String nom=""+jTFNombre2+"."+formato.toLowerCase();
                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/4"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {
//            Logger.getLogger(EditorPixel.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("ALGO FALLO------------>");
                }
    }
    ////////////////////////////WACAHNDO BROTHER
      private void generalizar(){
         try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/2" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                      try {
                          for (int j = 1; j < imagen.getWidth(); j+=3) {
                            for (int i = 1; i < imagen.getHeight(); i+=3) {
                                
                                try {
                                      if(j!= imagen.getWidth()-1){
                                         int pixel1 = imagen.getRGB(j-1, i-1);
                                    int pixel2 = imagen.getRGB(j-1, i);
                                    int pixel3 = imagen.getRGB(j-1, i+1);
                                   
                                    int pixel4 = imagen.getRGB(j, i-1);
                                    int pixel5 = imagen.getRGB(j, i+1);
                                   
                                    
                                    int pixel6 = imagen.getRGB(j+1, i-1);
                                    int pixel7 = imagen.getRGB(j+1, i);
                                    int pixel8 = imagen.getRGB(j+1, i+1);
                                    
                                    Color c1 = new Color(pixel1);
                                    Color c2= new Color(pixel2);
                                    Color c3 = new Color(pixel3);
                                    Color c4 = new Color(pixel4);
                                    Color c5 = new Color(pixel5);
                                    Color c6 = new Color(pixel6);
                                    Color c7 = new Color(pixel7);
                                    Color c8 = new Color(pixel8);
                                     int media = (int)(( c1.getRed() + c2.getRed() +c3.getRed() +c4.getRed() +
                                     c5.getRed() +c6.getRed()+c7.getRed()+c8.getRed() ) / 8 );
                                     //imagen.setRGB(j, i, new Color(255, 0, 0).getRGB());
                                     //imagen.setRGB(j, i, new Color(media, media, media).getRGB());
                                      imagen.setRGB(j-1, i-1, new Color(media, media, media).getRGB());
                                    imagen.setRGB(j-1, i, new Color(media, media, media).getRGB());
                                    imagen.setRGB(j-1, i+1, new Color(media, media, media).getRGB());
                                    
                                     imagen.setRGB(j, i-1, new Color(media, media, media).getRGB());
                                     imagen.setRGB(j, i, new Color(media, media, media).getRGB());
                                    imagen.setRGB(j, i+1, new Color(media, media, media).getRGB());
                                    
                                    imagen.setRGB(j+1, i-1, new Color(media, media, media).getRGB());
                                    imagen.setRGB(j+1, i, new Color(media, media, media).getRGB());
                                    imagen.setRGB(j+1, i+1, new Color(media, media, media).getRGB());
                                    }
                                } catch (Exception e) {
                                    System.err.println("ERROR CONTROLADO BRO");
                                            
                                }
                                  
                                   

                          
                                }
                            }
                      } catch (Exception e) {
                          System.err.println("No lo se rick, algo anda mal");
                          JOptionPane.showMessageDialog(this, "Algo fallo brother");
                      }
                    
//                    String nom=""+jTFNombre2+"."+formato.toLowerCase();
                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/8"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {
//            Logger.getLogger(EditorPixel.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("ALGO FALLO------------>");
                }
    }
      private void imprmirMatriz(){
           try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");

                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                          
                            System.out.print("["+valR+"-"+valG+"-"+valB+"]");          

                        }
                        System.out.println("");
                    }
//                    String nom=""+jTFNombre2+"."+formato.toLowerCase();
                  
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {
//            Logger.getLogger(EditorPixel.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("ALGO FALLO------------>");
                }
      }

         private void invertirEscalaDeGrises(){
         try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                    int pixinversoR=0;
                    int pixinversoG=0;
                    int pixinversoB=0;
                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                            pixinversoR=255-valR;
                            pixinversoG=255-valG;
                            pixinversoB=255-valB;
                            

                            imagen.setRGB(j, i, new Color(pixinversoR, pixinversoG, pixinversoB).getRGB());

                        }
                    }
//                    String nom=""+jTFNombre2+"."+formato.toLowerCase();
                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/Inv"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {
//            Logger.getLogger(EditorPixel.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("ALGO FALLO------------>");
                }
    }
         
          private void nivelesDeGrises(){
              Scanner inp = new Scanner(System.in);
              System.out.println("INGRESE EL NUMERO DE SEGMENTOS QUE DESEA");
              System.err.println("OPTIONS: 02--04--08--16-64-256");
              
              int segmentos= inp.nextInt();
              int factor=(int)(256/segmentos);
              System.out.println("leido");
              int rango1=0;
              int rango2=factor;
         try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen
                    
                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                   
                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                           
                            for (int k = 0; k <= 256; k+=factor) {
                                if(k!=0){
                                    rango1=k+1-factor;
                                rango2=k;  
                                }
                                try {
                                     if((valR>= rango1) && (valR<= rango2)){
                                     imagen.setRGB(j, i, new Color(rango2, rango2, rango2).getRGB());
                                }
                                } catch (Exception e) {
//                                    System.err.println(""+e.getMessage());
                                }
                               
                            }
                           
//                            System.out.println("["+c+"]");

                           

                        }
                    }
//                    String nom=""+jTFNombre2+"."+formato.toLowerCase();
                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/NivG"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {
            Logger.getLogger(EditorPixel.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("ALGO FALLO------------>");
                }
    }
          
          //OTRA FUNCION
            private void histograma(){
                ArrayList<Integer> lista = new ArrayList<>();
                  for (int k = 0; k < 256; k++) {
//                     lista.set(k, 0);               
                     lista.add(k, 0);
                    }
            try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo
                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen
                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                    

                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();

                            try {
                           lista.set(valR, Integer.parseInt(lista.get(valR).toString())+1 );
                            } catch (Exception e) {
                                System.err.println("Fallo-->"+e.getMessage());
                            }

                        }
                    }

                  
                    System.out.println("FINALIZADO");
                    System.out.println("PIXELES");
                     for (int k = 0; k < 256; k++) {
                            System.out.println("K["+k+"]-->"+lista.get(k).toString());
                     }
                } catch (Exception ex) {
                    System.out.println("ALGO FALLO------------>");
                }
                try {
                    //aqui iraw la grafica
//                    JFreeChart fig ;
                    DefaultCategoryDataset data = new DefaultCategoryDataset();
                    for (int i = 0; i < 256; i++) {
                          data.setValue(lista.get(i), ""+i,""+i);
                          //data.setValue(i, ""+lista.get(i), ""+lista.get(i));
                    }
                  
                
                //JFreeChart f = ChartFactory.createBarChart("PIXELES", "No. pixel", "CANTIDAD", data, PlotOrientation.VERTICAL, true, false, false);
                JFreeChart f = ChartFactory.createBarChart("PIXELES","CANTIDAD", "No. pixel", data, PlotOrientation.VERTICAL, true, false, false);
               // JFreeChart f2 = ChartFactory.createBarChart3D("PIXELES", "No. pixel", "CANTIDAD", data, PlotOrientation.HORIZONTAL, true, false, false);
                
                    ChartFrame frame =  new ChartFrame("PX", f);
                    frame.pack();
                    frame.setVisible(true);
                
                } catch (Exception e) {
                    System.err.println("ERROR DE GRAFICACION");
                }
    
            
         }
    
    private void suma100px(){
         try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");

                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                            valR+=100;
                            valG+=100;
                            valB+=100;
//                            System.out.println("|R:" + valR + "-G:" + valG + "-B:" + valB + "|");
//                            int media = ((int) (valR * 0.3) + (int) (valG * 0.59) + (int) (valB * 0.11)) / 3;
//                                int media = ((int) (valR ) + (int) (valG) + (int) (valB)) / 3;
                            if(valR>255){
                                valR=valR-256;
                            }
                             if(valG>255){
                                valG=valG-256;
                            }
                              if(valB>255){
                                valB=valB-256;
                            }
                            imagen.setRGB(j, i, new Color(valR, valG, valB).getRGB());

                        }
                    }
//                    String nom=""+jTFNombre2+"."+formato.toLowerCase();
                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/HI"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {
//            Logger.getLogger(EditorPixel.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("ALGO FALLO------------>");
                }
    }
         //FIN DE FUNCION
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(EditorPixel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(EditorPixel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(EditorPixel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(EditorPixel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new EditorPixel().setVisible(true);
//            }
//        });
//    }
//Mis variables 
    String formato="";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBConvertir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jCBTipoConversion;
    private javax.swing.JLabel jLImagen1;
    private javax.swing.JLabel jLImagen2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTFNombre;
    // End of variables declaration//GEN-END:variables

    private void marco() {
        try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                        
                    int auxAncho = (int)(ancho * 0.05);
                    int auxAlto = (int)(alto * 0.05);
                    
                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                          
                            imagen.setRGB(j, i, new Color(0, 0, 0).getRGB());

                        }
                        if(i==auxAlto){
                            i=alto-auxAlto;
                        }
                    }
                     
                     for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < auxAncho; j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                          
                            imagen.setRGB(j, i, new Color(0, 0, 0).getRGB());

                        }
                        
                    }
                     
                      for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = ancho-auxAncho; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                          
                            imagen.setRGB(j, i, new Color(0, 0, 0).getRGB());

                        }
                        
                    }
//                    String nom=""+jTFNombre2+"."+formato.toLowerCase();
                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/Marco"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {
//            Logger.getLogger(EditorPixel.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("ALGO FALLO------------>");
                }
        
        
    }

    private void cruz() {
          try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                        
                    int auxAncho = (int)(ancho * 0.05);
                    int auxAlto = (int)(alto * 0.05);
                    
                   
                    for (int j = (int)(imagen.getWidth()*0.5); j < (((int)(imagen.getWidth()*0.5))+ ((int)(imagen.getWidth()*0.05))); j++) {
                             for (int i = 0; i < imagen.getHeight(); i++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                          
                            imagen.setRGB(j, i, new Color(0, 0, 0).getRGB());

                        }
//                       
                    }
                     System.out.println("Columna bien");
                      for (int j = 0; j < imagen.getWidth(); j++) {
                          for (int i = (int)(imagen.getHeight()*0.5); i <(((int)(imagen.getHeight()*0.5))+ ((int)(imagen.getHeight()*0.05))); i++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                          
                            imagen.setRGB(j, i, new Color(0, 0, 0).getRGB());

                        }
                        
                    }
                     System.out.println("celd bien");
//                   
                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/Cruz"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
        
        
    }

    private void recorte() {
      try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                        
                    int auxAncho = (int)(ancho * 0.05);
                    int auxAlto = (int)(alto * 0.05);
//                   
                    ImageIO.write(imagen.getSubimage(200, 100, 300, 300), ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/X"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
        
    }
    
    
    //////////////////////////////////7
    //////////////////////////////////
      private void contraste() {                                             
       
        try {
                    
                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                    
                    String contrast=JOptionPane.showInputDialog(null, "Ingresa el numero:");
                    Double valcontraste=Double.parseDouble(contrast);
                    int contraste=(int)(valcontraste*100);
                    
                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                            
                            
                            int valRR=valR-contraste;
                            if(valRR<=0){
                                valRR=0;
                            }
                            int valGG=valG-contraste;
                            if(valGG<=0){
                                valGG=0;
                            }
                            int valBB=valB-contraste;
                            if(valBB<=0){
                                valBB=0;
                            }
                            
                              imagen.setRGB(j, i, new Color(valRR, valGG, valBB).getRGB());

                        }
                    }
                     ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/Contraste"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
    }                                            
    
      //////////////////////////////////7
    //////////////////////////////////
      //////////////////////////////////7
    //////////////////////////////////
       private void brillo() {                                         
      
        
        try {
                    
                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                    
                    String entrada=JOptionPane.showInputDialog(null, "Ingresa el numero:");
                    Double brillo=Double.parseDouble(entrada);
                    int brillofin=(int)(brillo*100);
                    
                    System.out.println("brillo "+brillofin);
                    
                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                            
                            
                            int valRR=valR+brillofin;
                            if(valRR>=255){
                                valRR=255;
                            }
                            int valGG=valG+brillofin;
                            if(valGG>=255){
                                valGG=255;
                            }
                            int valBB=valB+brillofin;
                            if(valBB>=255){
                                valBB=255;
                            }
                            
                              imagen.setRGB(j, i, new Color(valRR, valGG, valBB).getRGB());

                        }
                    }
                   ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/Brillo"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
    } 

        private void lineas() {
          try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                        
                    
                    String br=JOptionPane.showInputDialog(null, "Ingresa el numero:");
                    int su=(int)(ancho/Integer.parseInt(br));
                    
                    for (int j =10; j < imagen.getWidth(); j+=su) {
                      for (int i = 0; i < imagen.getHeight(); i++) {
                        
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                          
                            imagen.setRGB(j, i, new Color(0, 0, 0).getRGB());

                        }
//                       
                    }

                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/Lineas"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
        
        
    }
        
          private void operadoresIndividuales() {
               try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                        
                    
                    String umbral1=JOptionPane.showInputDialog(null, "Ingresa el umbral1:");
                    String umbral2=JOptionPane.showInputDialog(null, "Ingresa el umbral2:");
                  int u1 = Integer.parseInt(umbral1);
                  int u2 = Integer.parseInt(umbral2);
                  
                    for (int j =0; j < imagen.getWidth(); j++) {
                      for (int i = 0; i < imagen.getHeight(); i++) {
                        
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                          
                          if(valR<u1 || valR>u2) {
                              imagen.setRGB(j, i, new Color(0, 0, 0).getRGB());
                          }else{
                              imagen.setRGB(j, i, new Color(255, 255, 255).getRGB());
                          }
                            

                        }
//                       
                    }

                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/Operad"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
          }
            private void operadoresBinariosInverso() {
               try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                        
                    
                    String umbral1=JOptionPane.showInputDialog(null, "Ingresa el umbral1:");
                    String umbral2=JOptionPane.showInputDialog(null, "Ingresa el umbral2:");
                  int u1 = Integer.parseInt(umbral1);
                  int u2 = Integer.parseInt(umbral2);
                  
                    for (int j =0; j < imagen.getWidth(); j++) {
                      for (int i = 0; i < imagen.getHeight(); i++) {
                        
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                          
                          if(valR<u1 || valR>u2) {
                               imagen.setRGB(j, i, new Color(255, 255, 255).getRGB());
                              
                          }else{
                             imagen.setRGB(j, i, new Color(0, 0, 0).getRGB());
                          }
                            

                        }
//                       
                    }

                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/OperadInverso"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
          }
            
            ///////
               private void operadoresUmbralGris() {
               try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                        
                    
                    String umbral1=JOptionPane.showInputDialog(null, "Ingresa el umbral1:");
                    String umbral2=JOptionPane.showInputDialog(null, "Ingresa el umbral2:");
                  int u1 = Integer.parseInt(umbral1);
                  int u2 = Integer.parseInt(umbral2);
                  
                    for (int j =0; j < imagen.getWidth(); j++) {
                      for (int i = 0; i < imagen.getHeight(); i++) {
                        
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                          
                          if(valR<u1 || valR>u2) {
                               imagen.setRGB(j, i, new Color(255, 255, 255).getRGB());
                              
                          }
                            

                        }
//                       
                    }

                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/UmbalGris"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
          }

    private void operadoresUmbralGrisInverso() {
        try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                        
                    
                    String umbral1=JOptionPane.showInputDialog(null, "Ingresa el umbral1:");
                    String umbral2=JOptionPane.showInputDialog(null, "Ingresa el umbral2:");
                  int u1 = Integer.parseInt(umbral1);
                  int u2 = Integer.parseInt(umbral2);
                  
                    for (int j =0; j < imagen.getWidth(); j++) {
                      for (int i = 0; i < imagen.getHeight(); i++) {
                        
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                          
                          if(valR<u1 || valR>u2) {
                          }else{
                              imagen.setRGB(j, i, new Color(255, 255, 255).getRGB());
                          }
                            

                        }
//                       
                    }

                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/UmbGrisInv"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
    }
    
    
    ///////////////
     private void operadorExtension() {
        try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                        
                    
                    String umbral1=JOptionPane.showInputDialog(null, "Ingresa el umbral1:");
                    String umbral2=JOptionPane.showInputDialog(null, "Ingresa el umbral2:");
                  int u1 = Integer.parseInt(umbral1);
                  int u2 = Integer.parseInt(umbral2);
                  int aux;
                    for (int j =0; j < imagen.getWidth(); j++) {
                      for (int i = 0; i < imagen.getHeight(); i++) {
                        
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                          
                          if(valR<u1 || valR>u2) {
                              imagen.setRGB(j, i, new Color(255, 255, 255).getRGB());
                          }else{
                          aux=255*(int)((valR-u1)/(u2-u1));    
                          imagen.setRGB(j, i, new Color(aux, aux, aux).getRGB());
                          }
                            

                        }
//                       
                    }

                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/OperExt"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
    }
     
     //Vamos a girar 90 grados
     private void girar90() {
        try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen
                 
                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                      BufferedImage imagen2 =  new BufferedImage( ancho,alto, BufferedImage.TYPE_INT_RGB);
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                        
                    
//                      For (i=0;i<N;i++)
//                      for(j=0;j<M;j++)
//                      I’[i,j] = I[j,N-1-i]
                    for (int i =0; i < ancho; i++) {
                      for (int j = 0; j < alto; j++) {
                        
                           
                          try {
                               int pixel = imagen.getRGB(j, ancho-1-i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                               imagen2.setRGB(i, j, new Color(valR, valG, valB).getRGB());
                          } catch (Exception e) {
//                              System.err.println("hay mi programita");
                          }
                         

                        }
//                       
                    }

                    ImageIO.write(imagen2, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/90"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
    }
      private void girar180() {
        try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen
                 
                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                      BufferedImage imagen2 =  new BufferedImage(alto, ancho, BufferedImage.TYPE_INT_RGB);
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                        
                    
//                    for (i=0;i<N;i++)
                    //for(j=0;j<M;j++)
                    //I’[i,j] = I[M-1-i,N-1-j]
                    for (int i =0; i < ancho; i++) {
                      for (int j = 0; j < alto; j++) {
                        
                           
                          try {
                               int pixel = imagen.getRGB(alto-1-i, ancho-1-j);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                               imagen2.setRGB(i, j, new Color(valR, valG, valB).getRGB());
                          } catch (Exception e) {
//                              System.err.println("hay mi programita");
                          }
                         

                        }
//                       
                    }

                    ImageIO.write(imagen2, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/180"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
    }
        private void girar270() {
        try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen
                 
                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                      BufferedImage imagen2 =  new BufferedImage( ancho,alto, BufferedImage.TYPE_INT_RGB);
                      BufferedImage imagen3 =  new BufferedImage( ancho,alto, BufferedImage.TYPE_INT_RGB);

                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
//                           for (i=0;i<N;i++)
                    //for(j=0;j<M;j++)
                    //I’[i,j] = I[M-1-i,N-1-j]
                       for (int i =0; i < ancho; i++) {
                      for (int j = 0; j < alto; j++) {
                        
                           
                          try {
                               int pixel = imagen.getRGB(alto-1-i, ancho-1-j);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                               imagen2.setRGB(i, j, new Color(valR, valG, valB).getRGB());
                          } catch (Exception e) {
//                              System.err.println("hay mi programita");
                          }
                         

                        }
//                       
                    }
//                      For (i=0;i<N;i++)
//                      for(j=0;j<M;j++)
//                      I’[i,j] = I[j,N-1-i]

                   for (int i =0; i < ancho; i++) {
                      for (int j = 0; j < alto; j++) {
                        
                           
                          try {
                               int pixel = imagen2.getRGB(j, ancho-1-i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                               imagen3.setRGB(i, j, new Color(valR, valG, valB).getRGB());
                          } catch (Exception e) {
//                              System.err.println("hay mi programita");
                          }
                         

                        }
//                       
                    }

                    ImageIO.write(imagen3, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/270"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
    }
         private void X() {
        try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen
                 
                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                      
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                        
                  
                    for (int i =0; i < ancho; i++) {
                      for (int j = 0; j < alto; j++) {
                        
                           
                          try {
                            if(i==j){
                                imagen.setRGB(ancho-i, j, new Color(0, 0, 0).getRGB());
                                imagen.setRGB(i, j, new Color(0, 0, 0).getRGB());
                            }
//                            
                            
                          } catch (Exception e) {
//                              System.err.println("hay mi programita");
                          }
                         

                        }
//                       
                    }

                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/X"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
    }
         
         
         /////////
            private void transposicion() {
        try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen
                 
                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                      BufferedImage imagen2 =  new BufferedImage( alto,ancho, BufferedImage.TYPE_INT_RGB);
                      

                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");

                    for (int i =0; i < ancho; i++) {
                      for (int j = 0; j < alto; j++) {
                        
                           
                          try {
                               int pixel = imagen.getRGB(i,j);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                               imagen2.setRGB(j, i, new Color(valR, valG, valB).getRGB());
                          } catch (Exception e) {
                              //System.err.println("hay mi programita");
                          }
                         

                        }
//                       
                    }
//                    

                    ImageIO.write(imagen2, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/Transposicion"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
    }
         //////////
       private void brillo100P() {                                         
      
        
        try {
                    
                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                    
                    String entrada=JOptionPane.showInputDialog(null, "Ingresa el numero:");
                    Double brillo=Double.parseDouble(entrada);
                    //int brillofin=(int)(brillo*100);
                    int brillofin=(int)(brillo*1);
                    System.out.println("brillo "+brillofin);
                    
                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                            
                            
                            int valRR=valR+brillofin;
                            if(valRR>=255){
                                valRR=255;
                            }
                            int valGG=valG+brillofin;
                            if(valGG>=255){
                                valGG=255;
                            }
                            int valBB=valB+brillofin;
                            if(valBB>=255){
                                valBB=255;
                            }
                            
                              imagen.setRGB(j, i, new Color(valRR, valGG, valBB).getRGB());

                        }
                    }
                   ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/Brillo100"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
    } 

    private void recortarMitad() {
       try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen
                 
                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    int mitadAlto=(int)(alto/2);
                    int mitadAncho=(int)(ancho/2);
                      BufferedImage imagen2 =  new BufferedImage( mitadAncho,alto, BufferedImage.TYPE_INT_RGB);
                       BufferedImage imagen3 =  new BufferedImage( ancho,mitadAlto, BufferedImage.TYPE_INT_RGB);
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("----MENU-----");
                    System.out.println("----1.HORIZONTAL-----");
                    System.out.println("----2.VERTICAL-----");
                    
                    String opc=JOptionPane.showInputDialog(null, "Ingresa LA opc:");
                    int opcx=Integer.parseInt(opc);
                    if(opcx==1){
                    for (int i =0; i < (int)(ancho/2); i++) {
                      for (int j = 0; j < alto; j++) {
                          try {
                               int pixel = imagen.getRGB(i,j );
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                               imagen2.setRGB(i, j, new Color(valR, valG, valB).getRGB());
                          } catch (Exception e) {
//                              System.err.println("hay mi programita");
                          }
                        }
//                       
                    }//fin for
                    ImageIO.write(imagen2, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/Recorte"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                    }else{
                         for (int i =0; i < ancho; i++) {
                      for (int j = 0; j < mitadAlto; j++) {
                          try {
                               int pixel = imagen.getRGB(i,j );
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                               imagen3.setRGB(i, j, new Color(valR, valG, valB).getRGB());
                          } catch (Exception e) {
//                              System.err.println("hay mi programita");
                          }
                        }
//                       
                    }//fin for
                    ImageIO.write(imagen3, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/RecorteX"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                    }
                    
                    
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
    }

    private void ajedrez() {
          try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");

                    for (int i = 0; i < imagen.getHeight(); i++) {
                        for (int j = 0; j < imagen.getWidth(); j++) {
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
                                
                            if (i%2!=0){
                                if(j%2!=0){
                                    imagen.setRGB(j, i, new Color(0, 0, 0).getRGB());
                                }
                            }else {
                                if(j%2==0){
                                    imagen.setRGB(j, i, new Color(0, 0, 0).getRGB());
                                }
                            }
                                
                            

                            

                        }
                    }
//                    String nom=""+jTFNombre2+"."+formato.toLowerCase();
                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/Ajedrez"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {
//            Logger.getLogger(EditorPixel.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("ALGO FALLO------------>");
                }
    }
           private void lineasV2() {
          try {
                    // TODO add your handling code here:

                    File archivo_imagen = new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/" + jTFNombre.getText());//archivo

                    InputStream input = new FileInputStream(archivo_imagen);//flujo de datos de la imagen

                    ImageInputStream imageInput = ImageIO.createImageInputStream(input);//crear el stream de la imagen
                    BufferedImage imagen = ImageIO.read(imageInput);//leemos el stream de la imagen

                    int ancho = imagen.getWidth();
                    int alto = imagen.getHeight();
                    System.out.println("---------------------------------------------------------------");
                    System.out.println("Dimensiones---Ancho: " + ancho + "---Alto: " + alto + "----");
                    System.out.println("---------------------------------------------------------------");
                        
                    
                    String br=JOptionPane.showInputDialog(null, "Ingresa el numero DE LINEAS:");
                    int su=(int)(Integer.parseInt(br));
                    String espaciado=JOptionPane.showInputDialog(null, "Ingresa el espacio en px-->:");
                    int espaciadoNum=(int)(Integer.parseInt(espaciado));
                    for (int j =espaciadoNum; j < imagen.getWidth(); j+=espaciadoNum) {
                      for (int i = 0; i < imagen.getHeight(); i++) {
                        
                            int pixel = imagen.getRGB(j, i);
                            Color c = new Color(pixel);
                            int valR = c.getRed();
                            int valG = c.getGreen();
                            int valB = c.getBlue();
//                          
                            imagen.setRGB(j, i, new Color(0, 0, 0).getRGB());

                        }
                        su--;
                        System.err.println("espaciado-->"+espaciadoNum);
                        System.err.println("SU-->"+su);
                        if (su==0) {
                            break;
                        }
                    }

                    ImageIO.write(imagen, ""+formato.toUpperCase(), new File("C://Users/Luis/Documents/NetBeansProjects/Caraweb/LineasEspaciado"+jTFNombre.getText()));
                    System.out.println("FINALIZADO");
                } catch (Exception ex) {

                    System.out.println("ALGO FALLO------------>");
                }
        
        
    }
}


//las lineas y un cuadrado
